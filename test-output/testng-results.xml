<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="20" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-17T02:58:08 EDT" name="Testing Google Apps" finished-at="2020-05-17T02:58:34 EDT" duration-ms="26125">
    <groups>
    </groups>
    <test started-at="2020-05-17T02:58:08 EDT" name="Rest API Testing" finished-at="2020-05-17T02:58:34 EDT" duration-ms="26125">
      <class name="testScripts.TC004_Update_Record">
        <test-method is-config="true" signature="base()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:17 EDT" name="base" finished-at="2020-05-17T02:58:17 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:17 EDT" name="getAllEmployees" finished-at="2020-05-17T02:58:25 EDT" duration-ms="8429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkGetTime()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="checkGetTime" finished-at="2020-05-17T02:58:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="checkStatusCode" finished-at="2020-05-17T02:58:25 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="checkStatusLine" finished-at="2020-05-17T02:58:25 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method signature="checkingBody()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="checkingBody" finished-at="2020-05-17T02:58:25 EDT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testScripts.TC004_Update_Record.checkingBody(TC004_Update_Record.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingBody -->
        <test-method signature="checkingContentType()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="checkingContentType" finished-at="2020-05-17T02:58:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testScripts.TC004_Update_Record@33cb5951]" started-at="2020-05-17T02:58:25 EDT" name="tearDown" finished-at="2020-05-17T02:58:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.TC004_Update_Record -->
      <class name="testScripts.TC001_GET_ALL_Employees">
        <test-method is-config="true" signature="base()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:08 EDT" name="base" finished-at="2020-05-17T02:58:08 EDT" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:08 EDT" name="getAllEmployees" finished-at="2020-05-17T02:58:10 EDT" duration-ms="2058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkGetTime()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:10 EDT" name="checkGetTime" finished-at="2020-05-17T02:58:10 EDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:10 EDT" name="checkStatusCode" finished-at="2020-05-17T02:58:11 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:11 EDT" name="checkStatusLine" finished-at="2020-05-17T02:58:11 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method signature="checkingBody()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:11 EDT" name="checkingBody" finished-at="2020-05-17T02:58:11 EDT" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingBody -->
        <test-method signature="checkingContentType()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:11 EDT" name="checkingContentType" finished-at="2020-05-17T02:58:11 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testScripts.TC001_GET_ALL_Employees@70beb599]" started-at="2020-05-17T02:58:11 EDT" name="tearDown" finished-at="2020-05-17T02:58:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.TC001_GET_ALL_Employees -->
      <class name="testScripts.TC005_Delete_Record">
        <test-method is-config="true" signature="base()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:25 EDT" name="base" finished-at="2020-05-17T02:58:25 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:25 EDT" name="getAllEmployees" finished-at="2020-05-17T02:58:34 EDT" duration-ms="9118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkGetTime()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="checkGetTime" finished-at="2020-05-17T02:58:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="checkStatusCode" finished-at="2020-05-17T02:58:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="checkStatusLine" finished-at="2020-05-17T02:58:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method signature="checkingBody()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="checkingBody" finished-at="2020-05-17T02:58:34 EDT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testScripts.TC005_Delete_Record.checkingBody(TC005_Delete_Record.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingBody -->
        <test-method signature="checkingContentType()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="checkingContentType" finished-at="2020-05-17T02:58:34 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testScripts.TC005_Delete_Record@365c30cc]" started-at="2020-05-17T02:58:34 EDT" name="tearDown" finished-at="2020-05-17T02:58:34 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.TC005_Delete_Record -->
      <class name="testScripts.TC002_GET_SINGLE_Employee_Details">
        <test-method is-config="true" signature="base()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="base" finished-at="2020-05-17T02:58:11 EDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="getAllEmployees" finished-at="2020-05-17T02:58:11 EDT" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkGetTime()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="checkGetTime" finished-at="2020-05-17T02:58:11 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="checkStatusCode" finished-at="2020-05-17T02:58:11 EDT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testScripts.TC002_GET_SINGLE_Employee_Details.checkStatusCode(TC002_GET_SINGLE_Employee_Details.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="checkStatusLine" finished-at="2020-05-17T02:58:11 EDT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testScripts.TC002_GET_SINGLE_Employee_Details.checkStatusLine(TC002_GET_SINGLE_Employee_Details.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method signature="checkingBody()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="checkingBody" finished-at="2020-05-17T02:58:11 EDT" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testScripts.TC002_GET_SINGLE_Employee_Details.checkingBody(TC002_GET_SINGLE_Employee_Details.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingBody -->
        <test-method signature="checkingContentType()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="checkingContentType" finished-at="2020-05-17T02:58:11 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testScripts.TC002_GET_SINGLE_Employee_Details@4e41089d]" started-at="2020-05-17T02:58:11 EDT" name="tearDown" finished-at="2020-05-17T02:58:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.TC002_GET_SINGLE_Employee_Details -->
      <class name="testScripts.TC003_Create_New_Employee">
        <test-method is-config="true" signature="base()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:11 EDT" name="base" finished-at="2020-05-17T02:58:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:11 EDT" name="getAllEmployees" finished-at="2020-05-17T02:58:16 EDT" duration-ms="5469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkGetTime()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:16 EDT" name="checkGetTime" finished-at="2020-05-17T02:58:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:16 EDT" name="checkStatusCode" finished-at="2020-05-17T02:58:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:16 EDT" name="checkStatusLine" finished-at="2020-05-17T02:58:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method signature="checkingBody()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:17 EDT" name="checkingBody" finished-at="2020-05-17T02:58:17 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingBody -->
        <test-method signature="checkingContentType()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:17 EDT" name="checkingContentType" finished-at="2020-05-17T02:58:17 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testScripts.TC003_Create_New_Employee@32a068d1]" started-at="2020-05-17T02:58:17 EDT" name="tearDown" finished-at="2020-05-17T02:58:17 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.TC003_Create_New_Employee -->
    </test> <!-- Rest API Testing -->
  </suite> <!-- Testing Google Apps -->
</testng-results>
